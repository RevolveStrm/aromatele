generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  CREATED
  PROCESSING
  DELIVERING
  CANCELED
  DONE
}

enum UserLanguage {
  UK
  EN
  FR
}

model User {
  id               String        @id @default(uuid())
  telegramUserId   Int           @unique @map("telegram_user_id")
  telegramUserName String?       @map("telegram_user_name")
  language         UserLanguage?
  orders           Order[]
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime      @updatedAt @map("updated_at")

  @@map("users")
}

model Order {
  id          Int            @id @default(autoincrement())
  totalAmount Float          @map("total_amount")
  status      OrderStatus    @default(CREATED)
  paymentId   String?
  userId      String
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  products    OrderProduct[]
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  @@map("orders")
}

model Category {
  id          String    @id @default(uuid())
  title       String    @unique @db.VarChar(255)
  description String?
  products    Product[]

  @@map("categories")
}

model Product {
  id               String         @id @default(uuid())
  title            String         @unique @db.VarChar(255)
  price            Float
  fullDescription  String?        @map("full_description") @db.Text
  shortDescription String         @map("short_description") @db.VarChar(100)
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")
  ordersProduct    OrderProduct[] // relation field

  categoryId String   @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
  @@map("products")
}

model OrderProduct {
  id        String   @id @default(uuid())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")

  @@map("order_product")
}
